Description: cardboardborks.com
Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: cardboardborks.com
      DomainValidationOptions:
        - DomainName: cardboardborks.com
          HostedZoneId:
            Ref: HostedZone
      SubjectAlternativeNames:
        - "*.cardboardborks.com"
      ValidationMethod: DNS

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: cardboardborks.com

  CachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        DefaultTTL: 3600 # 1 hour
        MaxTTL: 31536000 # 1 year
        MinTTL: 60 # 1 minute
        Name: cardboardborks-com
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none # cspell:disable-line
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none # cspell:disable-line
          QueryStringsConfig:
            QueryStringBehavior: none # cspell:disable-line

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - cardboardborks.com
          - www.cardboardborks.com
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /404/index.html

        DefaultCacheBehavior: # cspell:disable-line
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachePolicyId:
            Ref: CachePolicy
          Compress: true
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN:
                Fn::GetAtt: [ViewerRequestFunction, FunctionARN]
          ResponseHeadersPolicyId:
            Ref: SecurityHeaders
          TargetOriginId: website
          ViewerProtocolPolicy: redirect-to-https

        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName:
              Fn::Sub: ${Bucket}.s3.us-east-1.amazonaws.com
            Id: website
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Sub: origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}

        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn:
            Ref: Certificate
          MinimumProtocolVersion: TLSv1.2_2019
          SslSupportMethod: sni-only

  ViewerRequestFunction:
    Type: AWS::CloudFront::Function
    Properties:
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var host = request.headers.host ? request.headers.host.value : undefined;
          if (host && host == 'www.cardboardborks.com')
            return {
              statusCode: 301,
              statusDescription: 'Redirect',
              headers: {
                location: {
                  value: 'https://cardboardborks.com' + request.uri
                }
              }
            }

          if (request.uri.endsWith('/'))
            request.uri += 'index.html';
          else if (!request.uri.includes('.'))
            request.uri += '/index.html';
          return request;
        }

      FunctionConfig:
        Comment: cardboardborks.com viewer-request
        Runtime: cloudfront-js-1.0

      Name: CardboardBorksViewerRequest

  SecurityHeaders:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        CustomHeadersConfig:
          Items:
            - Header: Permissions-Policy
              Override: true
              Value: camera=(), geolocation=(), microphone=()

        Name: CardboardBorksSecurityHeaders

        SecurityHeadersConfig:
          ContentSecurityPolicy:
            ContentSecurityPolicy: "script-src-elem 'self' cdn.usefathom.com; default-src 'self'; img-src 'self' data: cdn.usefathom.com;" # cspell:disable-line
            Override: true

          ContentTypeOptions:
            Override: false

          FrameOptions:
            FrameOption: DENY
            Override: true

          ReferrerPolicy:
            ReferrerPolicy: no-referrer-when-downgrade
            Override: true

          StrictTransportSecurity:
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Preload: true
            Override: true

          XSSProtection:
            ModeBlock: true
            Override: true
            Protection: true

  Publisher:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: Publish
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action: s3:ListBucket
                Effect: Allow
                Resource:
                  Fn::Sub: arn:aws:s3:::${Bucket}
              - Action:
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:PutObject
                Effect: Allow
                Resource:
                  Fn::Sub: arn:aws:s3:::${Bucket}/*

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        ErrorDocument: 404/index.html
        IndexDocument: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket
      PolicyDocument:
        Statement:
          - Action: s3:ListBucket
            Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}
            Resource:
              Fn::Sub: arn:aws:s3:::${Bucket}

          - Action: s3:GetObject
            Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}
            Resource:
              Fn::Sub: arn:aws:s3:::${Bucket}/*

  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: cardboardborks.com

  DKIM1:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZone
      Name: fm1._domainkey.cardboardborks.com # cspell:disable-line
      ResourceRecords:
        - fm1.cardboardborks.com.dkim.fmhosted.com # cspell:disable-line
      TTL: 86400 # 1 day
      Type: CNAME

  DKIM2:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZone
      Name: fm2._domainkey.cardboardborks.com # cspell:disable-line
      ResourceRecords:
        - fm2.cardboardborks.com.dkim.fmhosted.com # cspell:disable-line
      TTL: 86400 # 1 day
      Type: CNAME

  DKIM3:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZone
      Name: fm3._domainkey.cardboardborks.com # cspell:disable-line
      ResourceRecords:
        - fm3.cardboardborks.com.dkim.fmhosted.com # cspell:disable-line
      TTL: 86400 # 1 day
      Type: CNAME

  MX:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZone
      Name: cardboardborks.com
      ResourceRecords:
        - 10 in1-smtp.messagingengine.com # cspell:disable-line
        - 20 in2-smtp.messagingengine.com # cspell:disable-line
      TTL: 86400 # 1 day
      Type: MX

  TXT:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZone
      Name: cardboardborks.com
      ResourceRecords:
        - '"google-site-verification=hm4GinXB_EA1Ga3pZH9GgOs25nnyNwwqz9wgFbtu2TM"' # cspell:disable-line
        - '"v=spf1 include:spf.messagingengine.com ?all"' # cspell:disable-line
      TTL: 86400 # 1 day
      Type: TXT

  Website:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # cspell:disable-line
        DNSName:
          Fn::GetAtt: [CloudFrontDistribution, DomainName]
      HostedZoneId:
        Ref: HostedZone
      Name: cardboardborks.com
      Type: A

  WWW:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # cspell:disable-line
        DNSName:
          Fn::GetAtt: [CloudFrontDistribution, DomainName]
      HostedZoneId:
        Ref: HostedZone
      Name: www.cardboardborks.com
      Type: A

Outputs:
  Bucket:
    Description: S3 bucket to host the site
    Value:
      Ref: Bucket

  Publisher:
    Description: IAM user with permission to publish to the host bucket
    Value:
      Ref: Publisher
